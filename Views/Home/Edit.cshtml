@model Inventory;

@{
    ViewData["Title"] = "Update Item";
}

<h2>Update Data</h2>

<br>

@Html.ActionLink("Back", "Index", "Home")

<br><br><br>

@using (@Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <fieldset disabled>
        <div class="mb-3 row">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class ="col-sm-3 col-form-label" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <div class="mb-3 row">
        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class ="col-sm-3 col-form-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3 row">
        @Html.LabelFor(model => model.DatePurchased, htmlAttributes: new { @class ="col-sm-3 col-form-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.DatePurchased, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.DatePurchased, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3 row">
        @Html.LabelFor(model => model.Quality, htmlAttributes: new { @class ="col-sm-3 col-form-label" })
        <div class="col-sm-9">
            @Html.DropDownList("Quality", new List<SelectListItem> 
                {
                    new SelectListItem { Text = "Good", Value = "Good" },
                    new SelectListItem { Text = "Bad", Value = "Bad" }
                }, "-", new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.Quality, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="submit" value="Update" class="btn btn-dark" style="position: absolute; right: 7em;" />
}

<br><br><br>